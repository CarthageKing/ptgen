// Code generated by go-bindata.
// sources:
// data/conditions.json
// data/medications.json
// DO NOT EDIT!

package ptgen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataConditionsJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5d\x5b\x6f\xdb\x48\x7b\xfe\x2b\x84\x6f\x9a\x05\x62\x85\x67\x52\x7b\x67\xcb\xce\x26\xa8\xbd\x31\x62\x65\x17\x45\x51\x14\x23\x6a\x64\xce\x17\x92\xc3\x6f\x48\x3a\xab\x16\xdf\x7f\xef\x3b\xa4\x64\x7b\x86\xef\xc8\xd4\xc1\x8e\xb6\xc9\xde\x6c\x60\x49\x43\xea\x79\xf8\x9e\x0f\xfa\xcf\xff\x3d\x49\x78\x31\x67\x35\xe3\xc5\x7f\xb3\xf9\xc9\xaf\xce\xdb\x13\x96\xcc\xc7\x09\x9f\xd3\x93\x5f\x4f\x7c\xdb\x19\x8d\x4f\xde\x9e\xcc\x59\x55\x66\x64\x09\x7f\xf9\xb0\x2c\xa9\xa8\x69\x51\xc1\x07\xe0\x85\x9c\xce\x59\x42\x1e\x3e\x1d\xbf\x3d\xe1\xf7\x54\x14\xec\x2e\xad\x2b\x78\xb7\x0d\x6f\x21\x33\x52\xd3\x9c\x16\xf5\x24\x25\x45\x02\xa7\xfa\xf6\xdb\x93\x94\x92\xec\x93\xb8\xa0\xa4\x4e\x4f\x7e\x5d\x90\xac\xa2\x70\x16\x17\x35\xc9\x58\xbd\x5c\xbf\xd1\x7e\xf2\xb7\x29\xcb\xe5\x0d\xfd\xfe\xee\x0c\x8e\x14\x34\x91\x97\x59\x5e\x56\x35\xcb\xe1\x74\x78\xa1\x62\x7f\x5d\xf3\xa2\x4e\x2b\x78\xb9\x14\x3c\xa1\xf3\x46\xd0\x27\x07\x3d\xfc\xed\xb6\x49\x12\x5a\x55\xed\x1f\x93\x94\x26\x5f\xbf\x94\xf0\xf1\x82\x17\xf4\xe9\x27\x2f\x68\x95\x08\x56\xca\x2f\xf6\x70\xd5\xc7\x63\x3b\x70\x6c\xf9\x9f\xfe\xf7\xdf\xc9\xc3\x7d\xfe\xeb\xad\x0e\xae\xab\x80\xeb\x06\xf6\xa8\x3d\xe0\x11\xdd\x0b\x46\x66\xb4\xa6\x55\x1f\x59\x5f\x43\xd6\x39\x75\x31\x6c\x5f\x02\x5a\xfd\xdb\x1f\x19\xa8\x9e\x0a\xea\x18\x40\x55\x31\x6d\x01\x62\xa4\x8f\xa9\x33\xe4\x69\xfd\x01\x11\xf5\x55\x1d\x10\xbb\x9a\x0e\x38\x27\x49\x4d\x05\x23\x99\x75\x53\xd0\x26\xe7\x05\x06\xae\xab\x81\xeb\x9f\x86\x18\xbc\x8e\xad\x03\x5c\x8b\x06\xc3\xd7\x71\xfb\x00\xd7\xa9\xa0\xf4\x4f\x4a\xbf\x56\x38\xce\xdf\xe0\xa5\xdd\x80\x96\x9f\xbc\x82\x43\xc4\xcb\xa3\x1d\xa8\x68\xbb\xb1\xf6\xfc\x4e\x78\x71\x47\xe1\x3b\xdd\x53\xeb\x03\x25\xa2\xb6\xde\x13\x96\xc1\xc1\x7d\xc8\x3d\x0d\xf2\xe0\x34\xc2\x20\x77\x87\x3e\xd2\x3e\xf2\x4c\x2f\x78\x23\xfe\x03\x6e\xc3\x80\xf8\x46\x35\x1c\xa3\xb8\x87\xdb\x02\x7f\xdb\x88\x3b\xb8\xaa\x55\x73\x4b\xd0\x1c\xee\xc0\x9a\x65\x3c\xf9\x4a\x00\x25\x6b\x21\x78\x6e\x25\x44\xcc\x19\xbf\x27\x55\xd2\x64\x44\x58\x80\x19\x3c\xad\xf0\x22\x29\xe6\xef\xb8\xb0\xee\x49\x76\x4f\x2b\x84\x3b\xcf\xb7\x03\xc7\xc0\xdd\x99\x58\x3d\xf2\x97\xf9\x8c\x67\x34\xa9\x79\xbe\x44\xc8\x0c\x15\x32\xbd\x30\x18\x45\xae\xc2\xe6\x6f\x19\x69\x12\x9e\x23\x02\x13\x1c\x99\x36\xc2\xd9\xda\x42\x1d\x5d\x91\x8a\x0a\x8b\x2e\xa9\x55\x3d\x65\x6c\xde\x24\xd4\x62\x45\x2d\x08\xef\xf8\x29\x05\x9c\xdc\x3d\xd0\x3a\x23\x61\x18\x85\x26\x46\x3e\x0a\x36\xe7\x92\x86\x77\xf2\x5f\x1d\x23\xd6\x6c\x69\x75\x97\x5d\x3d\x24\x08\x45\x91\x42\x51\xe4\x80\x87\xa3\x0a\x1c\x50\x9d\x0a\x78\x3f\x62\x85\xc3\x23\xe3\xe8\x58\x2c\x46\xac\x59\x8c\x68\x14\x2b\x90\x7e\x2c\x16\x59\x43\x8b\xff\x41\x1e\xfb\x48\x83\xd4\x3b\xf5\xf7\xb2\x13\xc1\x6b\x9a\x89\xd7\x41\x77\xac\x3e\xb1\x9e\x37\xb2\x1d\x05\xde\x4f\x55\x4d\x79\xc9\x05\xaf\xb0\x87\x76\x7c\xc8\x87\x16\x81\xb7\xa2\xf7\xb4\xd8\x60\x13\x0c\xcf\xae\xfb\x3c\xbc\x6c\x71\xb3\x7e\xc3\xe9\x84\x54\xf5\x67\xa9\xee\x49\x36\xd0\x34\x54\x60\x35\xad\x94\x95\x60\x14\xc0\x61\xc1\x15\x8c\x1b\xb9\xae\x89\x8c\x49\xc6\x2b\x3a\xb7\x6a\x01\x88\x48\xa8\x2c\xbe\xb0\xce\x12\x5a\x93\x59\x93\x35\xb9\xf5\xe6\x03\x1c\x7d\x0b\x86\x87\xd6\xbf\x58\xef\xd7\x97\xe8\xb3\xe7\xd8\xaa\x70\x84\xa1\x6e\xe0\x53\x01\x2e\x54\x62\x9d\xc3\xff\x92\x14\x57\x3c\x8e\x1e\x59\x19\xdc\xa9\xc1\xb1\xd5\x0e\xb6\xdd\x24\x26\x0e\x4a\xa4\xbb\x85\xa0\xf4\x2d\xfa\x9c\xe4\x60\xcf\xe7\x56\xd6\x14\x77\x16\x20\x52\x35\x18\x7b\x9e\xeb\xc7\x26\xf6\xae\xf8\xac\xb3\x09\x6f\xad\x1b\xf0\x00\xa4\xe9\x5e\x3d\x3e\x92\xc7\x2b\x38\x17\xe3\x4a\x0d\x7f\xbd\x78\xac\x87\xbf\x00\x0f\x83\x5b\xba\xe2\x15\xc2\x92\x3d\x44\xd2\xa2\xe0\x05\xec\x43\xab\xe2\xcc\x9e\x17\x2e\x6b\xf1\x5e\x14\x3d\x3a\x5d\x7c\x56\x81\x32\x4e\x6a\x09\x0c\xe0\x03\xfe\x57\xa1\x0a\xe9\xda\x9a\x8f\x5d\xa3\xe6\xfb\x4c\x79\xbe\xe2\x66\xc1\x05\x65\x77\x85\x35\xe3\xf3\x65\xe7\xd0\xd1\xbf\xc0\xf9\x82\x33\x2d\xd2\x00\x59\x1c\x6e\xa3\xbb\x04\x42\xa0\x1a\x62\x07\x5e\xa0\x87\xd8\xbf\x81\x1e\x31\x58\x77\x47\x8f\x59\x0c\xb6\x28\x1a\x2a\x64\x1e\x62\x8b\xbe\xf1\x1d\x44\xec\x58\x2c\x91\xa3\x05\xdb\xbe\xdf\x4f\x0f\xf1\x3a\x5d\x0a\xce\xe0\x6f\x39\x02\xb1\x1e\xa3\x1c\x49\x86\x28\xc0\x00\xf6\x8c\xc6\x68\xa7\x28\xa5\x04\x35\x04\xc2\x02\x01\x49\xd6\x3e\xe7\x75\x4a\xad\x15\x56\x98\xb0\xd8\x6e\xe0\x1a\xc8\x59\x2b\xb4\x69\xf7\x69\x63\x34\xe2\xa8\x91\xbc\x1b\x07\x1a\x5d\x67\x05\xcd\xd1\xcc\x88\x9e\x6e\xf2\x4f\x03\x8c\xa8\x78\x0f\xb7\x61\xb3\x24\x6c\x64\xcb\x45\xe9\xda\x46\x9d\x9d\x67\x9c\x4b\xd3\x4e\x8a\x6a\xd1\xc8\x5c\xa6\x0c\x0e\x2d\x70\xa3\x20\x7a\xa4\x40\x4f\xfb\x0a\x80\x54\xd4\x98\xd9\x09\x7d\xcf\x24\x37\xdd\xc1\xd3\xc7\x83\x31\x5a\xb4\x90\x7f\xec\x6a\xee\xf2\x65\x5e\xa6\xcb\x8a\x62\x51\xa2\xa3\x87\x89\x1e\xce\xcc\x60\x15\xb5\xbd\x1f\x70\x18\x7f\x6e\x80\x08\x49\x23\x6d\xdd\x73\x70\xb6\x68\x17\x37\xca\xbf\xaf\x83\x49\xdc\x1d\x18\x9b\xa2\xc5\xf6\xac\x3f\xba\xb3\x3e\xaf\xcf\xc2\xb8\x09\x35\x03\xe2\x8d\x3c\xd5\x80\xdc\x50\xb8\xbf\xc4\xfa\x92\x25\xed\xbd\xeb\xfc\xe8\x21\x62\x88\x27\x61\x06\x4b\xce\x01\xbd\x00\x54\x6a\x82\x7d\x18\xfa\x13\x94\x4f\x01\x66\xff\x5d\xab\xe2\xa4\xfd\x97\x4a\x6e\xad\xdc\x2a\x50\x4b\x24\x49\x11\xa6\x7c\x2f\xf4\x4c\x4c\xad\x95\x5b\x6b\xa8\xcd\xaa\x4d\x0d\xe3\x83\xc0\x1f\xa9\x31\xd1\x1f\xe0\xa8\x25\xe0\xc0\x5b\x7f\x50\x56\x60\xc6\x5e\x0f\x3c\x0d\xd9\xb2\x1f\x30\x9a\x77\x62\x2d\x8b\xe5\x8e\x02\x55\x06\xae\x49\x97\xba\xb9\xa0\x77\xb4\xa0\xa2\x45\x15\x81\x78\x90\x3f\xfc\x8a\x00\xa3\x02\xb0\x05\xc0\x1f\xf3\xd6\x24\x40\x5c\x92\xb3\x82\x11\x19\xf0\x59\x35\xcd\xe0\x3d\xbc\x94\x39\xad\xf6\xa9\x2f\x01\x00\xf8\x7a\xff\x56\xc9\xd4\x17\x9a\xd3\x1a\xc7\x81\x29\xa7\x55\x54\x54\xb4\x5a\x0e\x44\xe8\xe3\x93\x1c\xd9\x15\x2d\x2a\x0b\x44\x13\x2e\x20\x63\x7c\x84\x33\x35\x49\xe0\x46\xba\x67\xf6\x1b\x6f\x6a\x84\x22\x3d\x39\x60\x88\x2b\xc7\xc7\xe1\x91\x6d\x63\xe2\xcf\x8a\xaf\x99\xb4\x1b\xf0\xfd\x93\xf6\xbb\xb4\x26\xbe\x01\xad\x60\x91\x84\xcd\xad\x44\x2c\x2b\xb8\xcf\xce\x3b\x43\xe3\x15\x37\x8a\x6c\x93\x0b\xd6\x9d\xfe\xf9\xf1\x74\xac\xdc\xa7\x46\xfe\x41\xe8\xeb\xc1\xc8\x84\x17\x00\x47\x69\x90\x1f\x77\x90\xfc\xf4\x33\x63\x87\xe0\xe6\xd8\x23\x11\x57\x2b\x54\xfb\xb6\xee\xda\x82\xa8\x88\x2a\xc9\xa8\x21\x2b\xa6\x27\x54\xf6\xf4\xa3\x0e\xa0\x9d\x70\xaf\xf6\xc0\x31\x48\x46\xfe\xd9\xd0\x2e\xaa\x26\xeb\x92\xc6\x37\x08\x48\xd0\x7a\x88\x17\x44\xa6\xe7\x7f\xc2\x05\x2f\x08\x9c\x7d\x59\xcc\xdb\x83\x8c\x96\xda\x55\x43\x72\xdf\x09\x35\xa6\x6e\x9a\x2c\xef\xce\xea\xea\x5b\x17\xac\xa2\xa4\x42\xea\x5b\x3a\x65\x06\x8b\xed\x0d\xe5\xcc\x39\x6c\x54\xe2\x1c\x3e\x88\x7c\x84\xa6\xad\x3f\x2d\x9f\x56\x9f\xac\x37\x9b\x72\x32\xab\x5a\x57\x92\x71\x88\x39\xd7\x96\xe9\xe1\xb4\x6a\x29\x43\x9d\x5f\x50\xce\xc7\x8e\x49\x12\x37\xdd\x0d\x46\xbc\xa7\xb9\xd2\xf6\x28\x56\x7d\xb4\xcb\x8a\x97\x29\xdc\x6e\x9b\x9b\x5b\x64\xcd\x5f\x03\xfc\x69\x3c\xa7\xf6\x1d\xbc\x69\x0f\x55\x85\xe3\xbd\x02\x1e\x02\xee\x33\x97\xde\x04\x18\x29\xa5\x68\xc6\x8a\x05\x17\x09\x5d\x39\x18\x55\x05\xa0\x59\x33\x5a\xc3\x99\x1d\xb5\xb4\x43\xb2\x69\x89\x7f\xc6\xf9\xf6\x9c\x28\x34\x51\xdc\xfa\x1c\x75\xca\x05\x98\xc8\x44\x86\xb1\xf0\x5d\x38\xb0\x55\xd5\x28\xc3\x6a\x7e\xc1\xb6\x3d\x4d\xb4\x6f\x89\x7c\x62\x20\xa0\xc6\x1a\x04\xf4\xf6\x0b\x83\x06\x1e\x5c\xf9\xf9\x7f\x65\xde\xd4\x14\x81\xdd\xaf\x52\x3e\x0a\xe3\xb4\x99\x51\x01\x6e\x22\x6e\xe7\x5c\x3d\xa9\xe9\x04\xa7\x2e\x2a\x44\x83\x43\x52\x17\x41\xfa\xb9\x1a\xdb\x66\xcd\x89\xc2\x7e\xe8\xf4\x5b\x5b\xaa\x79\x53\xfd\x22\x7d\xeb\xd9\xaa\x85\xa5\x15\x17\xf0\x11\x09\x13\x5d\xad\xa1\x2b\x3c\xa0\xc9\x05\xc7\x37\x71\x38\x6d\x05\xa6\x2d\x46\x3f\x55\xc6\xab\x6b\x9c\x2e\x58\x96\x41\xcc\x90\x80\xd2\xc5\xa8\x56\x33\x0e\x6e\x18\x68\xf5\xa1\x73\x38\x04\x18\x66\x08\xb7\x83\xb2\xa9\x2f\xe3\x20\x3e\xa3\x1d\x8f\x46\x90\xd4\x3c\x81\x17\x45\xa3\x28\xd0\x7c\x70\x88\xb8\x12\x30\x41\xe7\x19\x2b\xe6\x05\x1d\x52\xd8\x71\x4e\xbd\x9f\xb9\x82\x0e\xdf\xb8\x57\x9c\x76\xb5\xc7\x17\xee\xc3\x9a\xc8\x67\xff\x59\x58\x8f\x26\xf8\xc4\x15\xd2\x5e\xb6\xfd\x42\x10\x56\xac\xb4\x40\xab\x75\x56\x5a\x21\x05\x0f\xca\xfa\xc6\xea\xd4\x9a\x49\xa0\x92\x94\x95\xab\x36\x26\x19\xec\x83\x56\xe2\x1d\x60\x95\x55\xb3\x54\x4d\x31\x60\x21\xab\x1d\x3a\xa6\xe4\xc2\x59\x55\xb2\x2e\x55\x03\x86\xfd\x49\x4d\xfb\x91\x20\x84\x5e\x35\xad\x10\x3b\xfd\x10\x96\x88\x52\x0a\x8f\x3c\xe4\xfd\x63\xa1\xfd\xb9\xca\xe8\xa9\x73\x34\xaa\xca\xdf\x92\xec\x41\x9d\x08\x9f\x69\x45\xeb\x87\xce\x03\xa0\x59\x52\x3e\xd3\x44\x72\x4d\x5a\x18\xda\x26\xd2\xba\x73\x3e\xc8\x4f\x6f\xe8\x31\xf0\xd4\x4c\x43\xec\x06\xba\x14\xbe\xe7\xbc\xfe\xc9\x8f\x99\x9f\x85\xc4\xc7\xc4\x4f\xec\x7b\x9b\xf9\x51\xd1\x45\xf8\x51\xb3\x15\x81\xaf\xc6\x41\x67\x65\x49\xe1\xed\x09\x5e\x96\xd6\xb9\xd9\xb7\x43\x0a\xab\x4a\xef\xd8\x21\x35\x46\x43\xde\xbd\xf4\x64\x87\xc5\x2a\xa8\x44\x2a\x07\xfe\x38\x30\x59\x28\xe5\xa3\x08\x09\x6a\x22\x62\xec\xf7\xfa\xa8\xde\x73\xd0\x8b\x22\xb7\xce\x1b\x81\xa4\xe3\xfa\x32\x82\xb6\xe0\xff\x98\xf9\x38\xcf\xd3\xc0\x05\x2f\x36\x54\xc0\x9d\xa6\x00\xdc\x40\x68\xdd\xa1\x8f\xf8\x0f\x01\xad\x1e\x65\xfb\x23\xb5\xa7\xf8\x16\x90\xc5\x63\xec\xbe\x83\x85\x86\xd8\x2f\xe2\x60\x1d\x3d\xac\x5a\x88\xed\xea\xc9\x8b\x73\xd1\xc8\x5e\x00\x43\x58\xdd\x1b\xc8\x01\x93\xb9\x5f\xfe\x62\x87\x01\x87\xbf\xc5\xd4\x93\xa7\x06\xb8\xb6\xec\x5f\x55\x80\xfe\x33\xe5\xbc\x94\xc5\xe3\x09\x6f\x40\x45\xbc\x39\x1f\x59\x37\x54\xd4\x4d\x05\xc8\xff\x82\x40\xdf\x6f\x81\xf8\xa9\x2d\x1e\xd1\x56\x03\x5e\x3b\xd6\x27\xf8\xa6\xcb\x32\x6d\xb0\x27\xba\x87\xea\x78\x3f\x37\x63\x87\x2c\xd1\xde\x49\x85\x57\x9c\xdb\xf1\xd4\xc8\xd7\x8e\xf4\x31\xa9\xeb\x26\x2f\x07\xb9\x73\xb8\x4e\x7e\x89\x36\xd1\xa3\x7f\x78\xf5\x2a\xb6\x3b\xf2\x4f\x7a\xe3\xa7\x19\x2b\xd9\xdc\xd0\xb8\x36\x68\xa6\xef\x45\xca\x05\x9b\x3b\xd6\xf0\x18\x26\xd8\xc3\x51\xee\x1a\x59\x13\xeb\x7c\x29\x0b\x02\x0f\x03\x2f\x58\xb3\x4d\xec\x47\x06\x1a\xd4\x43\xb0\x59\x40\x35\xb2\x8c\x40\x9d\xa8\x3e\xf3\x05\xab\x20\xe8\x99\xc9\xaf\x59\xc9\x6c\xc2\x6d\x2e\xfb\xe7\x64\xbc\x3a\x85\xb3\x91\x50\x73\x18\x45\x2f\xa3\xbc\x37\x72\x14\xa2\x1c\x45\xc1\x8e\x4d\xd2\x55\x0d\xd1\x84\x55\xd1\xa2\x92\x0d\xcb\x25\x7c\x87\x6f\x64\x29\x6b\x71\xf7\x3c\x6b\x5b\xa5\xaa\x07\xa4\xea\x15\x52\x3a\x73\xe3\x28\xf0\x3c\x03\x73\xb7\xab\x83\x3f\x16\x35\xbd\x93\x69\x9d\x7b\x6a\x4d\x69\x92\x16\xec\x9f\x0d\x45\x99\x54\x63\x50\x27\xd4\xf5\x55\xdb\x22\x37\x91\x58\x20\x7d\x6d\xae\xde\x28\x62\x28\xbe\x3a\x43\xd5\x56\x84\x99\x87\x8d\xc5\xd7\xd6\x38\xac\x5f\x1f\x98\x25\x50\xa7\x10\xe0\x5f\x79\x9b\x55\x23\xe5\x72\x20\x8b\x6d\x26\xbf\x6e\xe0\x4e\x1f\xca\xa8\x0f\xe5\xb1\x84\xdc\xc3\xbd\x23\xbc\x79\x6e\x60\x9b\x78\x6b\x51\x9e\xca\x03\xd7\xf3\x08\x18\x57\x6a\xa8\xea\x04\xba\x6f\x3a\xe1\x19\x2f\x8c\x64\x79\xba\x8d\x89\x4f\x9d\xfd\x14\x61\x80\xb3\xb5\xdc\x95\xad\x08\x65\x2b\xdc\x81\xad\xc9\xa6\x7a\x38\x91\x83\x02\x00\x11\x6f\x2a\xab\xe4\x0f\x9d\x55\x92\xc5\x44\x22\x88\x55\xc0\x7d\xdf\x5c\xe8\x59\xf7\x26\x3e\x5e\xb4\xcd\xdc\x9e\x15\x44\x96\x5b\x39\xde\x9a\xe5\xab\xa1\xb1\xd3\x73\x14\x6e\xbf\xb2\x35\x97\xd6\x9b\x6b\x9a\x91\x82\xe7\x04\x71\x7c\x3d\x5d\x73\x9a\xf2\xe5\x43\x65\x10\x2d\xe4\xed\x21\x83\x11\x9e\x0e\x8a\x87\x6b\xd0\x6b\x9e\x56\x0f\x95\xef\x37\x44\xce\x82\xe4\x92\xb1\x4a\x42\x04\x6a\x6e\xd1\x0e\x99\xb4\x04\xb7\x9d\x57\x4f\xf8\x6d\xdf\x22\x03\xb6\x0a\x63\xd5\x89\x3c\xc7\xd4\x71\xda\x5e\xf4\x9a\x25\x82\xc3\x15\xca\x54\x16\xbe\xd7\x8a\x14\xa3\x53\x0d\xc7\x83\x38\x18\x79\x27\xd8\x3c\xd7\xbf\xb3\x79\x41\x97\xe6\x76\x96\x81\x8e\xe0\x3e\x55\xd9\x1d\x47\xf3\xf0\xf2\xc7\x16\xfe\xe0\xea\xab\x4f\x37\x75\xd1\x83\x8a\x34\xb6\x21\xf4\x3f\x8f\xf0\x10\x68\x3a\x32\xd0\xd2\x22\x57\x60\x12\x85\x59\x47\xea\xf1\x4e\x78\x1a\x63\xf0\xbb\x43\x85\x29\x46\xba\x89\x9e\xe9\xa4\xdf\x2c\x4d\x78\x3f\x98\xbf\x83\x8e\xfc\x40\xc1\xfd\xd8\x49\x4b\x66\x12\x43\x54\x4b\x46\x8e\x71\x70\x72\xad\x25\x9f\x5c\x16\xe3\x4f\x4d\x0b\xf8\x51\xac\xa9\xc5\x2f\x25\xf8\xfa\x60\x24\xbb\xb2\x95\xf4\x75\x64\x3f\xca\x86\xfe\xb0\xde\x6c\x84\xa1\x8a\x31\x38\xdd\xf5\xaa\x2b\x27\x5e\x69\xb7\x87\xd6\x37\x1f\x39\x23\xad\x1c\xce\x84\x48\xa5\x25\x6b\xc7\x24\x25\xfd\x88\xec\xe8\x7d\x07\x7b\xaa\x2e\x6c\x18\x75\xb3\x1d\xda\x6a\x06\x65\xaf\x11\x87\x4e\x8b\x6c\x9c\x07\x02\x59\xf0\x42\x93\xbb\xd7\x7e\x7c\xb3\x22\x53\x13\x09\x8e\x13\x69\x06\xe5\xac\x02\x41\xb8\x63\xa6\x54\xa4\xa7\xa7\x22\x5d\xfb\xd4\x43\xdd\xbd\x60\x28\x21\xe1\x81\x1d\x03\xdc\xa0\xf8\xfb\xf0\xd2\xf5\xdc\xc0\x97\x93\x0d\xf1\x8a\x56\x9b\xcb\x4a\xfb\xba\x01\x72\xa5\xe2\xda\xde\x9e\x1c\x42\x5c\xb4\xe7\xd1\x0d\x02\xdf\xc0\x9f\x72\x19\x8c\x3c\x35\x63\x01\x0f\x82\x96\xdc\x3c\x63\x45\xda\x20\x93\x90\xc7\x36\x1b\x81\x47\xbf\xde\x16\x2a\x6a\xca\xc1\x94\xe4\x65\x53\xaf\xdb\xd9\xfb\x75\xd4\xd8\x68\x33\xe4\x87\xcf\x1e\x3f\x8c\xac\xc9\xb1\xb5\x36\xa9\x1e\xd0\x82\xcd\xf8\x22\x83\x98\xac\xc0\xe5\xe4\x3b\x76\xd3\xff\x4d\x9a\xa5\x02\x47\x4b\xbf\x85\x9a\x4b\x75\x96\xb0\xb9\x41\x09\x1d\xda\xf6\x6e\xdd\x9b\xbd\x59\x03\x1d\x0d\xc4\x6a\x64\x6f\xfb\x8e\xde\x50\x73\x5b\x43\x6c\x53\xf3\x84\x27\x09\x96\xa6\xf7\x7a\x0d\xd1\x43\x5b\x35\x5e\x7e\x61\x0a\xee\xb1\xee\xd5\x0e\x30\xe5\x45\xc5\xd6\xc1\x36\x28\xf7\x52\xc8\x90\xa6\xb6\x16\x4d\x3b\x7d\xd5\x82\x65\x4d\x21\xe2\x22\xa8\x65\x76\x63\xdf\x34\xc1\xf0\xf4\x64\x8c\x28\x35\x6a\x0f\xc7\xa1\x96\xf8\xbc\xa9\xb8\x60\x04\x17\x06\x7d\xb6\xf0\x7b\x2b\xf7\xa3\x79\xfa\xb5\x81\x74\xdb\xd7\xdb\x9a\xaf\x96\x79\x99\x12\x39\x60\x7b\x45\x9b\xaf\x78\x92\xdf\xd3\x07\x41\xa4\xc3\x83\x3a\xa0\x83\x57\x9d\x45\x87\x0e\xde\x9e\x47\x7c\x58\xe8\x76\x30\xe4\x03\x4d\xb5\x8f\xf5\xfe\x8c\x09\xcf\x73\x08\xfc\xe4\xdc\x2c\x99\x65\xd4\xfa\x98\xe7\x4d\x01\xef\x5e\xb0\x84\xd1\x62\xb9\x73\xfe\xe2\x25\xea\x58\x1b\xf3\xf8\xf8\x60\x46\xb4\x4f\xad\xa5\xed\x6e\xbc\x26\x42\xf0\x6f\xef\x6e\xe5\x92\x80\x89\x4c\xdd\x6f\x4c\x6f\x78\xb1\xeb\x9b\x12\x4e\x1f\x28\x7c\x0f\x5e\x72\x46\xe5\x83\x0e\x77\x72\x47\x0b\xb9\xd7\x44\x3f\xd6\xe8\x0b\x69\x6b\xe6\x5c\x7d\xf8\xb9\x1d\xe3\x80\xb8\x59\xee\x4c\x39\x9b\x55\xc9\xa0\xa6\x66\x7c\x28\xe0\xd5\xe9\xc3\x1d\x51\xb5\x54\xb6\xdd\x00\xc0\xe7\x2e\x06\xc0\x41\xe9\x39\xa9\x20\x59\xa6\x66\xbf\x5b\xbe\xa8\xad\x69\xbb\x8d\xc8\x6a\xfb\x79\xc9\x1d\x7d\x67\xce\xe2\x07\x51\x8f\x26\xbb\x4f\x53\x02\x74\xb3\x9f\x3c\x69\x3c\xf5\x51\x79\x49\xa2\xb4\x26\xf6\xd8\x1e\x05\xae\xc6\x54\xc5\x73\x74\xcf\xa9\x37\x68\xbd\x9a\xf7\xea\xf4\x1c\x8d\xc9\x57\x03\x64\xcf\x0f\x47\x11\xbe\xff\xec\x9a\xdd\xb5\x3d\xf2\xd8\xf6\xe3\x41\x32\xf0\xe3\x82\x1c\xda\x1a\xc8\x81\xee\x57\x5d\x96\xe0\xeb\x96\x15\x62\xc6\xfd\x83\xae\x41\x36\x76\xfd\x6c\x9f\xcc\x3b\x1a\x70\xb5\xa5\x70\xa1\x3d\x0a\xf5\xe6\xfa\x6e\x63\xd9\xb9\xdc\x58\xc6\x0a\xeb\x72\x39\xa4\xc5\x1e\x0d\x8f\x07\x97\xee\x5e\xbc\x89\x7b\xb7\xbe\x87\x95\x0e\xbf\xcc\x67\x74\x3e\xa7\x73\x0b\x87\x46\x27\x25\x0c\x5c\xe3\xd4\xf1\x93\xad\x7d\xca\x61\xed\x8c\xcc\xe5\x7a\x33\x9c\x3c\x17\xa1\x4e\x8d\xb6\x2f\x63\x67\xdc\x33\xc1\xff\x68\xda\xe5\xc0\xdd\x48\xbc\x75\xcd\xa5\x1f\xf6\x07\x4d\x59\x02\x3e\xf0\x59\x92\xc8\x0d\x37\x03\x46\x97\x06\x37\x83\x9b\xd6\x5b\x23\x72\x33\x27\xcb\xed\x98\x7c\x5e\x62\xb6\xf4\x7b\x0f\x26\x42\x9e\xc6\x43\xac\xaf\x6b\xd0\x79\x78\xdf\x2e\x49\x2b\x20\xc0\x27\x4c\x0c\x71\x8a\xf6\xc4\x1f\x89\xff\xb6\x86\xdf\xe0\x11\xed\x43\xc0\x31\x2e\x34\x0d\xb5\x02\xb8\xdb\x9b\xa3\xf8\x8d\x15\x77\xec\x1e\x9f\x66\xf1\xf5\xba\xeb\xcf\xdc\xc8\x0a\xd6\x40\x4b\x38\xb9\xba\xa3\x74\x41\x05\x7c\x15\x09\xab\x35\x07\xc7\x16\x9e\x89\xdb\x06\x34\xea\x5f\x25\x5f\xad\xcf\x7e\xb6\x1e\xfa\x13\xea\x0e\xea\x50\x1b\x5a\x8d\xf4\x25\x6f\xb7\x09\xcf\x58\x5b\x05\xfd\x38\x67\x5c\x36\xef\xb1\xe4\x79\x25\xe4\x7e\xf7\x1d\x32\xc1\xc1\x4d\xc0\x13\x0d\x34\xe1\x42\xae\x79\xb1\x6e\x21\x86\xa6\xd6\xa4\x11\xf7\xc4\xa4\x85\xdc\xd8\xb8\x39\xe9\x86\x57\x72\x2c\x1e\xac\x6c\xbb\x68\x1d\x5e\xc0\x2b\x6b\xa1\xb6\xa8\x3d\x8e\x75\x92\xbe\x08\xd6\x2e\x40\xf8\x58\xc0\x27\x6b\xb8\x27\x09\xc1\x6e\x7e\xd7\xe0\x9d\x31\x87\xeb\x08\x46\xbd\xae\x68\xdb\x6e\x76\x6d\x63\xd8\x22\x23\x75\x9b\xbd\xfb\x22\x28\x80\x4b\xb2\x77\xe7\x19\x01\x47\x4c\x58\xbf\xc3\xa1\xc0\x5c\xca\x8a\x44\x3b\x70\xdd\x8f\xe3\xf9\xfe\xc0\xbd\x64\x83\xaf\x82\xb0\xaa\xad\x8a\xf7\xf4\x66\x38\x25\xfa\xff\x00\xbe\x9f\x10\x29\xb9\x03\x83\x32\x24\x01\x89\x77\x39\xf6\x5a\x78\x0c\x3e\x00\x96\x04\x36\x3a\x01\x1b\xc9\xc5\x5d\x6a\x77\xdb\xdc\xc8\x44\xc2\xf0\x58\xfb\x58\xf9\xd6\x5d\xf6\xb0\x5d\x0e\xda\xf3\xa3\x1d\xcf\x31\x6e\x6c\xda\x7c\x18\x42\x95\x16\xb9\x83\x00\x6a\x06\xe9\x13\x40\x75\xc7\x88\xf5\xe6\x92\xb4\x9b\x62\x90\x9e\x45\xff\x3b\xae\xa8\x38\xf6\x5e\x9c\xc8\xd6\x16\x24\xe9\x8d\x1f\x9f\xd6\x8b\xb5\x3b\xc1\xbb\x68\xe0\x8d\xc5\x90\x66\x82\x7d\x7f\x6c\xe7\x10\x28\x8f\x07\xe4\x07\xb7\xdd\x39\x2e\x9b\xdd\xe1\xca\x45\xbb\xad\xa3\x5b\x75\x85\x30\xe1\xfb\xe6\x25\x08\x4f\x4e\xb8\x95\x93\x0f\x60\xc0\xcc\xfb\x8d\x22\x6d\x6c\x3b\xb0\xf5\xb4\xca\xc7\xe2\xae\x69\x0f\xfb\x20\xd1\x1f\x30\x81\x69\xf8\xdd\xae\x57\x9d\xc0\x1c\x32\xb5\xbd\xed\xb6\x2a\x25\x05\xd0\xae\xd3\xe9\x43\xd3\xe3\x69\x1c\x1a\x67\xb9\xb7\x3c\x1c\xe1\x4e\x0d\xfd\xe3\xc8\x1b\x85\xaa\x74\x9d\x0b\xfe\x95\x16\xd6\x94\xf3\x3a\x1d\x12\x60\xbe\xe2\x46\x04\x63\x81\x1d\x95\xa9\x78\x0b\x99\xfa\x2c\x37\x15\x98\x16\xf4\xfb\x4e\x3c\x1e\x9b\xd2\x30\xf2\x83\x13\xc3\xda\xfd\xc8\xd3\x7c\xb5\x48\xdf\x3f\x71\xb1\xac\xe4\x82\x32\x69\x2c\xa6\x82\x37\xd2\x79\xb8\x95\x7b\x07\xf9\x37\x30\xed\x88\xdd\x18\x08\xff\xe0\x8e\xb6\x03\x76\xeb\x78\x03\xf2\x65\xbb\xcc\x72\xf1\xaa\x6b\xd0\x7d\x4f\x01\x8a\x76\x48\x64\x46\xd1\xd6\x5b\x2f\x36\xae\x1f\xdf\x70\x10\xc2\x9a\x16\xc8\x8f\xf5\xe4\xd8\xda\xc1\xee\xfa\x6e\xc1\xef\xa3\xc9\xaa\xb5\x4b\xb7\xf2\xbd\x16\x44\x7c\x24\xf7\xc8\x06\xcd\x5f\x31\x03\x16\x69\x3b\xdf\xbd\x5e\xe7\x03\x98\x23\xd0\x47\xed\x40\x09\x6f\x40\xd4\xa8\xa0\x33\x70\xad\x25\xec\x44\x98\x70\xd7\x23\x7c\x1f\x9f\xca\x1a\xfc\x9b\x23\x58\x27\xee\x6e\x2e\x30\x3e\x0b\xe2\x6c\x8b\xff\x03\x0c\xb2\xc7\x47\xae\x9b\x5c\xca\xa0\x7c\xd6\xcd\xbd\x09\xd9\x0a\x24\x9d\xa3\xf7\x4d\x85\xb7\x1c\x7a\x91\x33\x36\xb9\x02\x5b\x1d\x8d\x30\x1a\xf6\x19\x75\x4c\x8c\xee\x48\x67\x80\xcf\x24\x0c\xa6\x13\xeb\xe3\x35\xd2\xb9\xb9\xa1\x05\x77\x1a\xb6\x8e\x68\x8e\x97\xce\x48\xfb\x1d\xd1\x50\x4f\x37\x5c\x93\x7f\x70\xb9\xf2\xbc\xfd\xbd\x3a\x39\x6e\x79\xc1\x2a\x2e\xe6\x58\x83\xbc\x3f\x68\x6b\x69\xf8\x03\xa6\xde\xa2\xb8\x37\x7f\xa0\xb5\x98\x66\x09\x4f\x79\x06\x5e\xdf\x4e\x93\x08\x7b\x6e\xf1\x3f\xd8\x24\x02\xde\xf1\x7e\xe4\x93\x08\x91\xd6\xcc\x1e\xab\xa3\x21\x37\xd2\xb3\x80\x7b\x34\x0f\x09\xeb\x7d\x8f\xfb\xba\x01\x72\x3d\xfd\x6b\x0f\x28\x0e\xeb\xcb\xfb\x4c\xe6\xed\xd2\xc8\x35\x26\xa6\x7d\x55\x41\x10\x9b\x2b\x9b\xe8\x19\xc8\xaf\x2b\xda\xda\x00\xa9\xbe\xdb\xff\x5c\x50\xf0\xfb\xcc\xb4\xf4\xfa\x25\xf1\xf5\x95\x83\x7f\x76\x49\x2e\xbf\x39\x24\x2d\x78\xe1\x6c\x97\x69\xe0\x6b\x39\x49\x6f\x1c\x74\xeb\x7e\x9c\xe4\xe1\x07\x98\x9e\xce\xbd\xcd\x5a\x08\xd1\xc9\xd1\xb1\x67\x3f\xf7\x5b\x25\x8f\x97\xc5\xe8\x53\xb3\x08\xe3\x71\x3c\x0a\xb4\x0d\xe8\xc0\xff\xe9\xa7\x92\xae\xc6\xf8\x37\x38\xda\xbd\xdf\x01\x7c\x81\xba\xe7\xae\x7d\x04\x03\xc2\xa2\x41\x09\xed\x84\x3d\xfc\x20\xd3\xba\x77\x4b\xb2\x25\x41\xe2\x0f\x18\xfd\xc9\x1b\x78\xfd\x29\x52\x3d\xde\x6c\xc7\xf8\xe3\x80\x3b\x5e\xe4\x5f\xff\xf5\x7f\x01\x00\x00\xff\xff\x73\x2a\xe0\xa2\x30\x7f\x00\x00")

func dataConditionsJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataConditionsJson,
		"data/conditions.json",
	)
}

func dataConditionsJson() (*asset, error) {
	bytes, err := dataConditionsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/conditions.json", size: 32560, mode: os.FileMode(420), modTime: time.Unix(1442344531, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataMedicationsJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x99\x5d\x6f\xdb\xbe\x15\xc6\xbf\x8a\xe0\x8b\xa1\x05\xb2\x46\x24\xf5\xda\x9b\x41\x71\x93\x34\x40\xde\xd0\x64\xc5\xd6\x61\x18\x68\x89\x89\xb9\x51\xa2\x40\x49\xa9\xed\x61\xdf\x7d\x87\xb6\xfb\x47\x72\x14\x93\x76\x9a\xab\xd6\x81\x2c\xfd\x74\xde\x9e\xe7\xd0\xff\xf8\xef\xa4\x16\x95\x2c\x79\x2f\x75\xf3\x2f\x59\x4d\x3e\x93\xa3\x89\x59\x5c\x6b\x53\x4f\x75\x25\x26\x9f\x27\x79\x9e\x52\x1a\x4d\x8e\x26\x33\xc3\x9b\xea\x9a\xd7\xf6\x8f\x85\x91\xa5\x68\xfb\x5f\x7f\xfd\xcb\xe4\x73\x6f\x06\x71\x34\xe9\x0d\xaf\xc4\xf6\x9a\x2f\xba\x11\xad\x58\x49\x15\x7c\x5d\x56\x46\x97\x73\xa5\x8d\xac\x44\x40\xc2\xfa\x31\xb8\x31\x5c\x05\xf7\x7c\xa6\x84\xbd\x09\xef\xae\x85\xa8\x04\x3c\xfd\x81\xab\x0e\xee\x63\x78\x6f\x6f\x41\xc2\x00\xae\x3d\x0e\x2a\xbe\x9c\xfc\xef\x68\x84\x4a\x11\x2a\x89\x48\x9e\x50\x84\x7a\x7d\x5c\x3c\xc3\xdc\xde\xff\x39\x67\xb1\x92\xfd\xdc\xe8\x7a\x59\xca\x26\xa0\xf1\x1f\x74\x53\xde\x76\x83\x12\x0e\xbc\x38\x74\xf3\x31\xcc\x17\x46\x2c\x4d\x10\xdf\x0f\xd1\xf5\x46\x2a\x67\x28\x2f\x65\x27\x1b\xdd\xc2\x65\x41\xbc\x77\xf0\x62\x27\x5b\x84\xd8\xb2\x24\xcc\xf3\x0c\xb1\x9d\x69\xd3\xc3\xff\xdc\x79\xbe\x12\xfd\x03\xdc\x07\x82\x87\xf3\x1c\xda\x58\x9e\x2e\x7a\xd1\x00\x5e\xf0\x4d\x28\xc1\x3b\xb1\x77\xea\x3d\xc1\x8d\x71\x70\x49\x96\xd0\x3c\x45\x6f\xf0\xb7\xe2\xb2\xb8\x2f\xae\x83\x9b\x76\xde\xcf\xb9\xaa\x65\x19\xdc\x69\x35\xd8\xbb\x38\x5f\x6a\x53\x35\x3b\xe1\x02\x78\xd1\x76\x37\x5b\x82\xd8\x58\x92\x87\x69\x88\xd0\xee\x97\x4a\x34\xda\x9d\xf8\xa2\x14\x90\x00\x9b\xfb\xb9\x68\x82\x64\x5d\x9c\xaf\x84\x6e\xf3\xc5\x2d\x1c\xcb\x3d\x91\x4b\x11\x1d\x4d\x08\x23\x31\xa6\x83\xc7\xaa\x33\x35\x38\xf1\x6e\x3a\xa1\x2c\xdf\x93\x34\x41\xba\x7f\x65\x92\xd8\x0d\x98\xbd\xd6\x37\x38\xb3\x07\xf6\xcd\xfb\x4d\x9d\x1c\x0f\xc8\x30\x8a\x28\x19\x75\x4e\xc7\x6b\xbe\x70\x27\x17\xf2\x0f\x75\xd4\xc0\x53\xdf\x11\x8f\x84\x88\x2f\x89\x22\x16\xe2\xe2\xbb\x1c\x4a\xd1\xf4\xb2\x73\x02\x7e\xe3\x8d\x9c\xc9\xd5\x50\xf3\x59\x70\xd1\xfc\x5b\x94\xbd\x65\x7b\xde\x40\xbb\x18\xc3\x4f\xdb\xe9\x53\xeb\xa6\x9f\xbf\x8a\x89\x75\x26\x21\x29\x23\x18\xd3\x3f\xbc\x7b\x6d\x9e\x78\xd7\xc3\x8d\x61\x78\xef\x1f\x44\xea\x09\xe2\x48\x5a\xf2\x34\x26\xb8\x04\xbd\x74\x53\xc5\xcd\x33\x71\x89\xc3\xfd\x01\x7d\xda\x42\xb0\xb8\xe4\x49\x42\xb2\x51\x9a\xc5\x93\xb6\xcf\x87\x6f\x38\xfb\x64\x7d\xd9\xd2\xe8\x85\x6c\x6c\x7e\x2b\x39\xd4\x41\xf8\x89\xec\x4d\x0b\xd7\xba\x69\x47\x72\x13\xe5\x09\xc1\x52\x7d\x22\x1f\x84\xe1\x4e\xd2\xb3\xd3\xe0\xeb\xe9\xd5\x69\x70\xab\xd5\xb2\x05\x07\x62\x85\x26\xa9\x1f\x8f\xed\xe7\x8e\x97\xe5\x9c\xaf\xb5\xe7\x02\xda\x2a\x98\xea\xba\x55\x62\x11\x50\x1a\x5c\x9d\xef\xf9\x22\x89\xfb\x35\x46\xa2\x93\x67\x24\xc2\xa3\xd3\x5b\x16\xb7\x46\x54\x8d\xec\xc0\x1f\xbd\x67\xdf\x63\xd1\xc9\x43\x9a\x50\x1c\xe2\x2f\x62\x21\x15\x6f\x3c\xce\x4d\x2c\xe0\x9a\x0e\x06\x27\x5f\x69\x68\x78\x06\x90\x0e\x30\xe6\x01\xc3\x7a\x93\x27\x19\x19\x8d\xf3\xa2\x2b\x95\x2f\xf9\x90\x64\x59\xe9\x92\x83\x6a\x5a\x1f\x74\x5c\x5f\x7a\xc2\x75\x09\x54\x3f\x85\xf8\xcf\xab\x58\x58\x65\x68\xc8\xf2\x08\x3b\xa0\xa2\x86\x9e\xf0\x68\xb4\xbd\xa4\x94\x4a\x1d\x6a\x1f\xbd\x16\x87\x60\xa9\xb1\x53\x28\x3a\x78\x46\x4e\xb5\x2a\xe7\x40\x08\xe5\x06\x73\xf9\x80\x9e\x76\x3b\x48\x8a\x85\x86\xd0\x28\x4d\x13\xac\x84\xf0\x74\x5e\x0a\xcf\xa6\x50\x0e\x9d\x55\xc1\xed\xe4\x71\x07\xf1\xa5\xd9\xf1\x84\x90\x8e\xd6\x99\x34\x0b\x09\x43\x8c\x17\xf5\xfa\xc1\xee\x19\xa9\x5b\xa8\xcf\xda\x4e\x97\x97\x3e\x97\xee\x0d\x4b\xdc\xd3\x85\xbe\x22\x3a\x19\x3b\x78\x9f\xb9\x80\xc1\x22\xf9\x4a\x56\xd0\xb7\xfb\x4f\x17\x6f\x20\xb1\xde\x30\x02\x6d\x7c\x30\xdc\xfd\x5c\x5a\x3f\x2b\xd6\x39\x76\xca\x9f\x9b\x06\xeb\x49\x0c\xde\x9f\xe0\xe6\xbd\x1b\xd6\xba\xeb\x4c\xeb\xbd\x80\x4f\xe5\xb2\x54\x1b\x28\x1f\x95\x07\x0b\xeb\x03\x03\x53\x93\xe0\xe5\xd9\x1b\xa4\x53\xb3\x44\x1b\xa9\xcb\xc9\xf8\x42\x85\x75\x21\xcb\x22\x46\x72\xec\xa6\x75\xb7\x74\x07\xea\x56\xda\xfa\xdf\xce\xb9\xc3\xdc\x20\x89\x03\x17\x20\xd6\x87\x2c\x86\xc2\xc2\x2d\x7a\x26\x4d\xcd\x1f\x3d\x5b\xdb\x17\xf1\xc8\x8d\x50\x72\x71\x20\x60\x16\x06\x4e\xb3\x4a\xb1\x56\xb0\x94\x24\x87\xe7\x75\x0a\x65\x06\x9b\x9c\xee\xda\xf9\x66\x90\xbc\x53\x6b\x62\x99\x60\x51\x1e\xa5\x07\xb7\xe6\xb9\x78\x90\xe0\xa2\xe5\xec\xb9\x8a\xf9\x8d\xb4\xa7\xfc\x18\x56\x89\x38\x8a\xe2\x78\xa4\xfe\xd6\xc3\x7b\x3a\xf5\x44\x3c\x41\xf9\xbd\x65\x1b\xd9\x00\xee\x32\x02\x0c\x4b\x04\x09\xc1\x07\x30\xdc\x21\x7f\x17\xe6\x49\x2f\x9d\x84\x17\xad\x54\xb2\x7e\x33\xe0\xce\xf2\x63\x58\x18\x12\x12\x83\x34\xe0\x04\x8b\x05\x7f\xe2\xc6\x49\x78\xa7\x0d\x7f\x10\x36\xc7\xbb\xb2\xfb\x42\xb0\x22\xdf\x01\x17\x16\x05\x68\xdd\x74\xec\xa1\xca\x5e\x3e\x72\xe5\x76\x51\x7f\x35\x1d\x68\x30\x18\xbb\x35\xd8\xad\xd1\xd5\x50\xba\xea\xce\xcd\x85\xe5\x81\xc5\x94\x8e\x66\xde\x77\x88\x84\x7b\x2f\xfa\x0e\x0a\x5f\xc2\x82\xbe\x76\xc1\xf4\x00\x35\xa5\xbe\xc0\x61\xa1\x48\x58\x98\xa7\x07\x0f\x94\xad\x5f\x3a\x81\x5b\x9b\xd9\xe6\x20\xe1\x77\x25\x8c\x8d\xe4\x82\x46\x24\xc7\x9e\xb3\x18\x1e\x6b\x7b\x7e\xe0\xee\xd8\xe7\xce\xf8\xc3\x1a\xec\x63\xf0\xa7\x00\x96\xe2\xa7\x01\xf6\x0b\x4b\xfb\x81\x50\x30\xa4\x1f\x7f\x87\x77\x74\x9a\x15\xc6\xd0\xbd\x78\xed\xb1\x6b\xb8\xfe\xf3\x5d\xc9\x55\xeb\x46\x86\x16\x84\x0c\xcb\xc6\xe1\xe2\xb6\x8b\xc5\x2e\xa0\x91\x56\x24\x8c\x8e\x4f\x56\xd5\x50\x71\xdf\xae\xbb\xb9\x66\x66\x9d\xc9\x61\xf3\x84\xc6\x9e\x91\x87\x15\x23\x83\x98\x8d\x06\x4a\x51\xcf\xa4\x70\x67\xf8\x87\x56\x2d\x08\x59\x0d\x1d\x61\x7a\xfb\xf0\xfd\xe6\x8a\xe7\x68\x1a\x4b\x06\x25\x8c\x8d\x4e\xd8\xae\xf8\x82\x2b\xf7\x1e\xfb\x4d\xae\x78\x6f\x64\xdb\xf3\x26\x38\x11\xcd\x4a\xbf\x17\x20\x56\x8c\x2c\x81\xfe\xc5\x9a\x76\x2f\x1e\x8d\xe8\x3d\x07\xbc\x53\x68\x5c\x5e\xf3\x95\x68\x6d\x96\xa3\x03\x46\x4c\xe6\x69\x8c\x08\x8b\x46\xc6\x22\xc2\x30\xe4\xad\x30\x52\x57\xe7\xdc\xb8\x07\xe1\xd4\x2e\x3b\x73\xb1\x90\x95\xc5\x3c\x57\x43\xb9\x99\x36\x57\x7a\xe8\xe7\x3f\x79\x37\x7f\xbb\x95\x8f\xb0\x86\xc4\x59\x14\x87\xb8\x81\x8b\xc1\xe8\xf3\xc1\x87\x09\xdd\x2b\xdb\xa5\x01\xc6\xe3\x75\xbe\x4b\x6e\x71\x6f\xfa\x97\xa7\xfe\xbb\xfb\xda\x9e\xea\x77\x0e\x54\x2c\x2b\x34\xcc\x22\x82\x7f\xd0\x39\xe1\x25\x14\x9d\x7b\x99\xbc\x1b\xd4\x83\xfd\x61\x65\xae\x17\x6b\x71\x39\xbe\x87\x6f\xd8\x8f\x2d\xfc\xfb\x5e\xbf\x90\x44\xa3\xd3\xaa\x30\x86\x49\x34\x3a\x75\xe3\x4b\x61\x82\xa2\x6b\xa5\xf1\xcd\xf3\xcd\x35\xcf\xcf\x31\x6f\xf5\xcf\x4a\x18\xa7\x83\xf0\x40\x8e\x7e\x2b\x89\xe9\xb8\x97\x8a\x19\x38\xab\x07\xb7\xfb\x2a\xa0\xd3\xe5\xaf\x23\xab\xb7\x9e\xab\xfd\xf3\xff\x01\x00\x00\xff\xff\x88\x9f\xf5\x63\x11\x1d\x00\x00")

func dataMedicationsJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataMedicationsJson,
		"data/medications.json",
	)
}

func dataMedicationsJson() (*asset, error) {
	bytes, err := dataMedicationsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/medications.json", size: 7441, mode: os.FileMode(420), modTime: time.Unix(1442504947, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/conditions.json": dataConditionsJson,
	"data/medications.json": dataMedicationsJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"conditions.json": &bintree{dataConditionsJson, map[string]*bintree{
		}},
		"medications.json": &bintree{dataMedicationsJson, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

